@model Docs.Models.ConnectionInfo

@{
    ViewData["Title"] = "Docs";
}

<div class="row">
    <div class="col text-center">
        <h3>Document ID = @Html.DisplayFor(model => model.DocId)</h3>
    </div>
</div>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css">
<link rel="stylesheet" href="~/css/docs.css" />
<!--<script src="~/js/docs.js"></script>-->



<form name="compForm" method="post" action="sample.php" onsubmit="if(validateMode()){this.myDoc.value=oDoc.innerHTML;return true;}return false;">
    <div id="toolBar" class="row my-2">
        <div class="col col-sm-6">
            <button type="button" id="bold" class="btn btn-outline-primary" onclick="checkItem('bold');formatDoc('bold');">
                <i class="fas fa-bold"></i>
            </button>
            <button type="button" id="italic" class="btn btn-outline-primary" onclick="checkItem('italic');formatDoc('italic');">
                <i class="fas fa-italic"></i>
            </button>
            <button type="button" id="underline" class="btn btn-outline-primary" onclick="checkItem('underline');formatDoc('underline');">
                <i class="fas fa-underline"></i>
            </button>
            <button type="button" class="btn btn-outline-primary" onclick="formatDoc('cut');">
                <i class="fas fa-cut"></i>
            </button>
            <button type="button" class="btn btn-outline-primary" onclick="formatDoc('copy');">
                <i class="fas fa-copy"></i>
            </button>
            <button type="button" class="btn btn-outline-primary" onclick="formatDoc('paste');">
                <i class="fas fa-paste"></i>
            </button>
        </div>
        <div class="col col-sm-2">
            <select class="form-control" id="fontSelect" onchange="formatDoc('fontname',this[this.selectedIndex].value);this.selectedIndex=0;">
                <option class="heading" selected>- font -</option>
                <option>Arial</option>
                <option>Arial Black</option>
                <option>Courier New</option>
                <option>Times New Roman</option>
            </select>
        </div>
        <div class="col col-sm-2">
            <select class="form-control" id="fontSizeSelect" onchange="formatDoc('fontsize',this[this.selectedIndex].value);this.selectedIndex=0;">
                <option class="heading" selected>- size -</option>
                <option value="1">Very small</option>
                <option value="2">A bit small</option>
                <option value="3">Normal</option>
                <option value="4">Medium-large</option>
                <option value="5">Big</option>
                <option value="6">Very big</option>
                <option value="7">Maximum</option>
            </select>
        </div>
        <div class="col col-sm-2">
            <select class="form-control" id="fontSizeSelect" onchange="formatDoc('forecolor',this[this.selectedIndex].value);this.selectedIndex=0;">
                <option class="heading" selected>- color -</option>
                <option value="red">Red</option>
                <option value="blue">Blue</option>
                <option value="green">Green</option>
                <option value="black">Black</option>
            </select>
        </div>
    </div>
    <div id="textBox" contenteditable="true"><p>Lorem ipsum</p></div>
    <p id="editMode"><input type="checkbox" name="switchMode" id="switchBox" onchange="setDocMode(this.checked);" /> <label for="switchBox">Show HTML</label></p>
    <p><input type="submit" value="Send" /></p>

</form>



<div class="row">
    <div class="col">
        <label for="docs">Document</label>
        <textarea class="form-control" id="docs" rows="10">

        </textarea>
    </div>
</div>
<button id="chkButton">Check</button>





<script type="text/javascript">


    var oDoc, sDefTxt;

    function initDoc() {
        oDoc = document.getElementById("textBox");
        sDefTxt = oDoc.innerHTML;
        if (document.compForm.switchMode.checked) { setDocMode(true); }
    }

    function formatDoc(sCmd, sValue) {
        if (validateMode()) { document.execCommand(sCmd, false, sValue); oDoc.focus(); }
    }

    function validateMode() {
        if (!document.compForm.switchMode.checked) { return true; }
        alert("Uncheck \"Show HTML\".");
        oDoc.focus();
        return false;
    }

    function setDocMode(bToSource) {
        var oContent;
        if (bToSource) {
            oContent = document.createTextNode(oDoc.innerHTML);
            oDoc.innerHTML = "";
            var oPre = document.createElement("pre");
            oDoc.contentEditable = false;
            oPre.id = "sourceText";
            oPre.contentEditable = true;
            oPre.appendChild(oContent);
            oDoc.appendChild(oPre);
            document.execCommand("defaultParagraphSeparator", false, "div");
        } else {
            if (document.all) {
                oDoc.innerHTML = oDoc.innerText;
            } else {
                oContent = document.createRange();
                oContent.selectNodeContents(oDoc.firstChild);
                oDoc.innerHTML = oContent.toString();
            }
            oDoc.contentEditable = true;
        }
        oDoc.focus();
    }

    function printDoc() {
        if (!validateMode()) { return; }
        var oPrntWin = window.open("", "_blank", "width=450,height=470,left=400,top=100,menubar=yes,toolbar=no,location=no,scrollbars=yes");
        oPrntWin.document.open();
        oPrntWin.document.write("<!doctype html><html><head><title>Print<\/title><\/head><body onload=\"print();\">" + oDoc.innerHTML + "<\/body><\/html>");
        oPrntWin.document.close();
    }


    var docs = document.getElementById("docs");
    var chkButton = document.getElementById("chkButton");
    chkButton.onclick = function () {
        docs.value = document.getElementById("textBox").innerHTML;
    };


    function checkItem(checked) {
        var item = document.getElementById(checked);
        var currentClass = item.className;
        if (currentClass == "btn btn-outline-primary") {
            item.className = "btn btn-primary";
        }
        else {
            item.className = "btn btn-outline-primary";
        }
    }
</script>